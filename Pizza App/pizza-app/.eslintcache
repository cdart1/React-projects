[{"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\index.js":"1","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\App.js":"2","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\reportWebVitals.js":"3","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Forms.js":"4","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Nav.js":"5"},{"size":547,"mtime":1608341386654,"results":"6","hashOfConfig":"7"},{"size":4078,"mtime":1608681693490,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":24516,"mtime":1608674804579,"results":"10","hashOfConfig":"7"},{"size":712,"mtime":1608681169657,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ucra5s",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\index.js",[],["24","25"],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\App.js",[],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\reportWebVitals.js",[],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Forms.js",["26","27","28","29","30"],"import { render } from \"@testing-library/react\";\r\nimport React, {useEffect} from \"react\";\r\nimport { Col, Form, Row, Container } from 'react-bootstrap';\r\nimport { CardGroup } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst PizzaForm = ({ selectedSize, setSelectedSize, \r\n                    selectedSizeCost, setSelectedSizeCost, \r\n\r\n                    selectedCrust, setSelectedCrust,\r\n                    selectedCrustCost, setSelectedCrustCost, \r\n\r\n                    selectedSauce, setSelectedSauce,\r\n\r\n                    selectedCheese, setSelectedCheese,\r\n                    selectedCheeseCost, setSelectedCheeseCost,\r\n\r\n                    allMeat, setAllMeat,\r\n                    selectedMeat, setSelectedMeat,\r\n                    selectedMeatCost, setSelectedMeatCost,\r\n                    meatStr, setMeatStr,\r\n\r\n                    allVeggies, setAllVeggies,\r\n                    selectedVeggies, setSelectedVeggies,\r\n                    selectedVegCost, setSelectedVegCost,\r\n                    vegStr, setVegStr,\r\n\r\n                    orderPlaced, setOrderPlaced,\r\n                    orderTotal, setOrderTotal}) => {\r\n\r\n    // Sets selected size state.\r\n    const selectedSizeHandler = (e) => {\r\n        const sizeCosts = {\r\n            \"Personal\": 6, \r\n            \"Medium\": 10,\r\n            \"Large\": 14,\r\n            \"Extra Large\": 16,\r\n        };\r\n        setSelectedSize(e.target.value);\r\n        setSelectedSizeCost(sizeCosts[e.target.value]);\r\n    }\r\n\r\n    //   Sets selected crust state.\r\n    const selectedCrustHandler = (e) => {\r\n        const crustCosts = {\r\n            \"Plain Crust\": 0,\r\n            \"Garlic Butter Crust\": 2,\r\n            \"Cheese Stuffed Crust\": 3,\r\n            \"Spicy Crust\": 1,\r\n            \"House Special Crust\": 0,\r\n        };\r\n        setSelectedCrust(e.target.value);\r\n        setSelectedCrustCost(crustCosts[e.target.value]);\r\n    }\r\n\r\n    // Sets selected sauce state.\r\n    const selectedSauceHandler = (e) => {\r\n        const sauceCosts = {\r\n            \"Marinara Sauce\": 0,\r\n            \"White Sauce\": 0,\r\n            \"Barbeque Sauce\": 0,\r\n            \"No Sauce\": 0,\r\n        };\r\n        setSelectedSauce(e.target.value);\r\n    }\r\n\r\n    // Sets selected cheese state.\r\n    const selectedCheeseHandler = (e) => {\r\n        const cheeseCosts = {\r\n            \"Regular\": 0,\r\n            \"No Cheese\": 0,\r\n            \"Extra Cheese\": 3,\r\n            \"Vegan Cheeze\": 2,\r\n        };\r\n        setSelectedCheese(e.target.value);\r\n        setSelectedCheeseCost(cheeseCosts[e.target.value]);\r\n    }\r\n\r\n    // Meat\r\n    const selectedMeatHandler = (e) => {\r\n        setAllMeat(allMeat.map((item) => {\r\n            if (item.meatName === e.target.value){\r\n                return {\r\n                    ...item, isChecked: !item.isChecked\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    // Add to or remove meat from list.\r\n    const createCheckedMeatList = () => {\r\n        setSelectedMeat(allMeat.filter((el) => el.isChecked === true));\r\n    }\r\n\r\n    const addUpMeatCost = () => {\r\n        if (selectedMeat.length !== 0) {\r\n            setSelectedMeatCost(selectedMeat.length - 1);\r\n        }\r\n    }\r\n\r\n\r\n    // Veggies\r\n    const selectedVeggiesHandler = (e) => {\r\n        setAllVeggies(allVeggies.map((item) => {\r\n            if (item.vegName === e.target.value) {\r\n                return {\r\n                    /*With spreading, you can change a property non-destructively: \r\n                    You make a copy of the object where the property has a different value. */\r\n                    ...item, isChecked: !item.isChecked\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        createCheckedVegList();\r\n        createCheckedMeatList();\r\n    }, [allVeggies, allMeat]);\r\n\r\n    useEffect(() => {\r\n        addUpVegCost();\r\n        addUpMeatCost();\r\n    }, [selectedVeggies, selectedMeat]);\r\n\r\n    // Add to or remove veggies from list.\r\n    const createCheckedVegList = () => {\r\n        setSelectedVeggies(allVeggies.filter((el) => el.isChecked === true));\r\n    }\r\n\r\n    const addUpVegCost = () => {\r\n        if (selectedVeggies.length !== 0) {\r\n            setSelectedVegCost(selectedVeggies.length - 1);\r\n        }\r\n    }\r\n\r\n    //  useEffect is constantly listening for state changes, and it runs whenever it does change.\r\n    useEffect(() => {\r\n        orderTotalHandler();\r\n    }, [selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost]);\r\n\r\n    const orderTotalHandler = () => {\r\n        let total = selectedSizeCost + selectedCrustCost + \r\n        selectedCheeseCost + selectedMeatCost + selectedVegCost;\r\n        setOrderTotal(total);\r\n    }\r\n\r\n    const getCosts = (e) => {\r\n        setOrderPlaced(true);\r\n        meatReceipt();\r\n        vegReceipt();\r\n    };\r\n\r\n    const meatReceipt = () => {\r\n        let meatConcat = \"\";\r\n        for (let i = 0; i < selectedMeat.length; i++){\r\n            if (i === 0 && selectedMeat.length !== 1){\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (no additional cost), \";\r\n            }\r\n            else if (i === 0 && selectedMeat.length === 1) {\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (no additional cost)\";\r\n            }\r\n            else if (i >= 1 && i < selectedMeat.length - 1) {\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (+$1), \";\r\n            }\r\n            else if (i === selectedMeat.length - 1){\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (+$1)\";\r\n            }\r\n        }\r\n        setMeatStr(meatConcat);\r\n    };\r\n\r\n    const vegReceipt = () => {\r\n        let vegConcat = \"\";\r\n        for (let i = 0; i < selectedVeggies.length; i++){\r\n            if (i === 0 && selectedVeggies.length !== 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (no additional cost), \";\r\n            }\r\n            else if (i === 0 && selectedVeggies.length === 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (no additional cost)\";\r\n            }\r\n            else if (i >= 1 && i < selectedVeggies.length - 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (+$1), \";\r\n            }\r\n            else if (i === selectedVeggies.length - 1){\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (+$1)\";\r\n            }\r\n        }\r\n        setVegStr(vegConcat);\r\n    };\r\n\r\n    const receipt = () => {\r\n        if (orderPlaced) {\r\n            render (\r\n                <Container>\r\n                    <div className=\"show-order\">\r\n                        <h3>You Ordered:</h3>\r\n                        <p>Size: {selectedSize} (${selectedSizeCost})</p>\r\n                        <p>Crust: {selectedCrust} \r\n                            {selectedCrustCost !== 0 ? \" (+$\" + selectedCrustCost + \")\": \" (no additional cost)\"}\r\n                        </p>\r\n                        <p>Sauce: {selectedSauce} (no additional cost)</p>\r\n                        <p>Cheese: {selectedCheese}\r\n                            {selectedCheeseCost !== 0 ? \" (+$\" + selectedCheeseCost + \")\": \" (no additional cost)\"}\r\n                        </p>\r\n                        {selectedMeat.length !== 0 ? <p>Meat: {meatStr}</p> : null}\r\n                        {selectedVeggies.length !== 0 ? <p>Veggies: {vegStr}</p> : null}\r\n                        <p>-----------------------------------------------</p>\r\n                    </div>\r\n                    <div className=\"total-price\">\r\n                        <h3>Total: ${orderTotal}.00</h3>\r\n                        <p></p>\r\n                    </div>\r\n                </Container>\r\n            )\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        receipt();\r\n    }, [orderPlaced]);\r\n        \r\n    const clearAll = () => {\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Form>\r\n            <CardGroup>\r\n                {/* Size Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                    <Card.Header>SLICE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a size:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Size options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Personal\"\r\n                            name=\"size\"\r\n                            value=\"Personal\"\r\n                            checked={selectedSize === \"Personal\"}\r\n                            onChange={selectedSizeHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Medium\"\r\n                            name=\"size\"\r\n                            value=\"Medium\"\r\n                            checked={selectedSize === \"Medium\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Large\"\r\n                            name=\"size\"\r\n                            value=\"Large\"\r\n                            checked={selectedSize === \"Large\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Extra Large\"\r\n                            name=\"size\"\r\n                            value=\"Extra Large\"\r\n                            checked={selectedSize === \"Extra Large\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedSizeCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Crust Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                    <Card.Header>CRUST</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a crust:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Crust options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Plain Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Plain Crust\"\r\n                            checked={selectedCrust === \"Plain Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Garlic Butter Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Garlic Butter Crust\"\r\n                            checked={selectedCrust === \"Garlic Butter Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Cheese Stuffed Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Cheese Stuffed Crust\"\r\n                            checked={selectedCrust === \"Cheese Stuffed Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Spicy Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Spicy Crust\"\r\n                            checked={selectedCrust === \"Spicy Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"House Special Crust\"\r\n                            name=\"crust\"\r\n                            value=\"House Special Crust\"\r\n                            checked={selectedCrust === \"House Special Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedCrustCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Sauce Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                <Card.Header>SAUCE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a sauce:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Sauce options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Marinara Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"Marinara Sauce\"\r\n                            checked={selectedSauce === \"Marinara Sauce\"}\r\n                            onChange={selectedSauceHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"White Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"White Sauce\"\r\n                            checked={selectedSauce === \"White Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Barbeque Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"Barbeque Sauce\"\r\n                            checked={selectedSauce === \"Barbeque Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"No Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"No Sauce\"\r\n                            checked={selectedSauce === \"No Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>*No additional cost</h4></Card.Footer>\r\n                </Card>\r\n                {/* Cheese Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                <Card.Header>CHEESE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a cheese:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Sauce options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Regular\"\r\n                            name=\"cheese\"\r\n                            value=\"Regular\"\r\n                            checked={selectedCheese === \"Regular\"}\r\n                            onChange={selectedCheeseHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"No Cheese\"\r\n                            name=\"cheese\"\r\n                            value=\"No Cheese\"\r\n                            checked={selectedCheese === \"No Cheese\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Extra Cheese\"\r\n                            name=\"cheese\"\r\n                            value=\"Extra Cheese\"\r\n                            checked={selectedCheese === \"Extra Cheese\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Vegan Cheeze\"\r\n                            name=\"cheese\"\r\n                            value=\"Vegan Cheeze\"\r\n                            checked={selectedCheese === \"Vegan Cheeze\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedCheeseCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Meat Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                    <Card.Header>MEAT</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select meat:</Card.Title>\r\n                        <Card.Text>- You can choose more than one</Card.Text>\r\n                        {/* Veg options checkbox */}\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Pepperoni\"\r\n                            name=\"meat\"\r\n                            value=\"Pepperoni\"\r\n                            checked={allMeat[0].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Sausage\"\r\n                            name=\"meat\"\r\n                            value=\"Sausage\"\r\n                            checked={allMeat[1].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Canadian Bacon\"\r\n                            name=\"meat\"\r\n                            value=\"Canadian Bacon\"\r\n                            checked={allMeat[2].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Chicken\"\r\n                            name=\"meat\"\r\n                            value=\"Chicken\"\r\n                            checked={allMeat[3].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                         <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Buffalo Chicken\"\r\n                            name=\"meat\"\r\n                            value=\"Buffalo Chicken\"\r\n                            checked={allMeat[4].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Vegan Chick'n\"\r\n                            name=\"meat\"\r\n                            value=\"Vegan Chick'n\"\r\n                            checked={allMeat[5].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Vegan Sausage\"\r\n                            name=\"meat\"\r\n                            value=\"Vegan Sausage\"\r\n                            checked={allMeat[6].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedMeatCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Veggie Options */}\r\n                <Card\r\n                    bg='warning'\r\n                    text='danger'\r\n                >\r\n                    <Card.Header>VEGGIES</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select veggies:</Card.Title>\r\n                        <Card.Text>- You can choose more than one</Card.Text>\r\n                        {/* Veg options checkbox */}\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Tomatoes\"\r\n                            name=\"veggies\"\r\n                            value=\"Tomatoes\"\r\n                            checked={allVeggies[0].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Onions\"\r\n                            name=\"veggies\"\r\n                            value=\"Onions\"\r\n                            checked={allVeggies[1].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Olives\"\r\n                            name=\"veggies\"\r\n                            value=\"Olives\"\r\n                            checked={allVeggies[2].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Green Peppers\"\r\n                            name=\"veggies\"\r\n                            value=\"Green Peppers\"\r\n                            checked={allVeggies[3].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Mushrooms\"\r\n                            name=\"veggies\"\r\n                            value=\"Mushrooms\"\r\n                            checked={allVeggies[4].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Pineapple\"\r\n                            name=\"veggies\"\r\n                            value=\"Pineapple\"\r\n                            checked={allVeggies[5].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Spinach\"\r\n                            name=\"veggies\"\r\n                            value=\"Spinach\"\r\n                            checked={allVeggies[6].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Jalapeno\"\r\n                            name=\"veggies\"\r\n                            value=\"Jalapeno\"\r\n                            checked={allVeggies[7].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedVegCost}.00</h4></Card.Footer>\r\n                </Card>\r\n            </CardGroup>\r\n            <Card.Footer className=\"text-danger\"><h4>Total: ${orderTotal}.00</h4></Card.Footer>\r\n            <Row>\r\n                <Col>\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        size=\"lg\"\r\n                        block\r\n                        onClick={getCosts}\r\n                    >Place Order!</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        size=\"lg\"\r\n                        block\r\n                        onClick={clearAll}\r\n                    >Cancel</Button>\r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n            {receipt}\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\n\r\n\r\nexport default PizzaForm;","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Nav.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":59,"column":15,"nodeType":"37","messageId":"38","endLine":59,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":121,"column":8,"nodeType":"41","endLine":121,"endColumn":29,"suggestions":"42"},{"ruleId":"39","severity":1,"message":"43","line":126,"column":8,"nodeType":"41","endLine":126,"endColumn":39,"suggestions":"44"},{"ruleId":"39","severity":1,"message":"45","line":142,"column":8,"nodeType":"41","endLine":142,"endColumn":100,"suggestions":"46"},{"ruleId":"39","severity":1,"message":"47","line":222,"column":8,"nodeType":"41","endLine":222,"endColumn":21,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'sauceCosts' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createCheckedMeatList' and 'createCheckedVegList'. Either include them or remove the dependency array.","ArrayExpression",["51"],"React Hook useEffect has missing dependencies: 'addUpMeatCost' and 'addUpVegCost'. Either include them or remove the dependency array.",["52"],"React Hook useEffect has a missing dependency: 'orderTotalHandler'. Either include it or remove the dependency array.",["53"],"React Hook useEffect has a missing dependency: 'receipt'. Either include it or remove the dependency array.",["54"],"no-global-assign","no-unsafe-negation",{"desc":"55","fix":"56"},{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [allVeggies, allMeat, createCheckedVegList, createCheckedMeatList]",{"range":"63","text":"64"},"Update the dependencies array to be: [selectedVeggies, selectedMeat, addUpVegCost, addUpMeatCost]",{"range":"65","text":"66"},"Update the dependencies array to be: [selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost, orderTotalHandler]",{"range":"67","text":"68"},"Update the dependencies array to be: [orderPlaced, receipt]",{"range":"69","text":"70"},[3865,3886],"[allVeggies, allMeat, createCheckedVegList, createCheckedMeatList]",[3973,4004],"[selectedVeggies, selectedMeat, addUpVegCost, addUpMeatCost]",[4503,4595],"[selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost, orderTotalHandler]",[7902,7915],"[orderPlaced, receipt]"]