[{"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\index.js":"1","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\App.js":"2","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\reportWebVitals.js":"3","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Forms.js":"4","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Nav.js":"5","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Jumbotron.js":"6","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Prices.js":"7","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\ThankYou.js":"8"},{"size":565,"mtime":1608684907212,"results":"9","hashOfConfig":"10"},{"size":5569,"mtime":1608784013862,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":23357,"mtime":1608780181721,"results":"13","hashOfConfig":"10"},{"size":725,"mtime":1608688992585,"results":"14","hashOfConfig":"10"},{"size":912,"mtime":1608762131507,"results":"15","hashOfConfig":"10"},{"size":2774,"mtime":1608778897737,"results":"16","hashOfConfig":"10"},{"size":355,"mtime":1608781295296,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"ucra5s",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\index.js",[],["38","39"],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\App.js",["40","41","42"],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\reportWebVitals.js",[],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Forms.js",["43","44","45","46","47","48"],"import { render } from \"@testing-library/react\";\r\nimport React, {useEffect} from \"react\";\r\nimport { Col, Form, Row, Container, Jumbotron, Card, CardGroup, Button } from 'react-bootstrap';\r\n\r\nconst PizzaForm = ({ selectedSize, setSelectedSize, \r\n                    selectedSizeCost, setSelectedSizeCost, \r\n\r\n                    selectedCrust, setSelectedCrust,\r\n                    selectedCrustCost, setSelectedCrustCost, \r\n\r\n                    selectedSauce, setSelectedSauce,\r\n\r\n                    selectedCheese, setSelectedCheese,\r\n                    selectedCheeseCost, setSelectedCheeseCost,\r\n\r\n                    allMeat, setAllMeat,\r\n                    selectedMeat, setSelectedMeat,\r\n                    selectedMeatCost, setSelectedMeatCost,\r\n                    meatStr, setMeatStr,\r\n\r\n                    allVeggies, setAllVeggies,\r\n                    selectedVeggies, setSelectedVeggies,\r\n                    selectedVegCost, setSelectedVegCost,\r\n                    vegStr, setVegStr,\r\n\r\n                    orderPlaced, setOrderPlaced,\r\n                    orderTotal, setOrderTotal}) => {\r\n\r\n    // Sets selected size state.\r\n    const selectedSizeHandler = (e) => {\r\n        const sizeCosts = {\r\n            \"Personal\": 6, \r\n            \"Medium\": 10,\r\n            \"Large\": 14,\r\n            \"Extra Large\": 16,\r\n        };\r\n        setSelectedSize(e.target.value);\r\n        setSelectedSizeCost(sizeCosts[e.target.value]);\r\n    }\r\n\r\n    //   Sets selected crust state.\r\n    const selectedCrustHandler = (e) => {\r\n        const crustCosts = {\r\n            \"Plain Crust\": 0,\r\n            \"Garlic Butter Crust\": 2,\r\n            \"Cheese Stuffed Crust\": 3,\r\n            \"Spicy Crust\": 1,\r\n            \"House Special Crust\": 0,\r\n        };\r\n        setSelectedCrust(e.target.value);\r\n        setSelectedCrustCost(crustCosts[e.target.value]);\r\n    }\r\n\r\n    // Sets selected sauce state.\r\n    const selectedSauceHandler = (e) => {\r\n        const sauceCosts = {\r\n            \"Marinara Sauce\": 0,\r\n            \"White Sauce\": 0,\r\n            \"Barbeque Sauce\": 0,\r\n            \"No Sauce\": 0,\r\n        };\r\n        setSelectedSauce(e.target.value);\r\n    }\r\n\r\n    // Sets selected cheese state.\r\n    const selectedCheeseHandler = (e) => {\r\n        const cheeseCosts = {\r\n            \"Regular\": 0,\r\n            \"No Cheese\": 0,\r\n            \"Extra Cheese\": 3,\r\n            \"Vegan Cheeze\": 2,\r\n        };\r\n        setSelectedCheese(e.target.value);\r\n        setSelectedCheeseCost(cheeseCosts[e.target.value]);\r\n    }\r\n\r\n    // Meat\r\n    const selectedMeatHandler = (e) => {\r\n        setAllMeat(allMeat.map((item) => {\r\n            if (item.meatName === e.target.value){\r\n                return {\r\n                    ...item, isChecked: !item.isChecked\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    // Add to or remove meat from list.\r\n    const createCheckedMeatList = () => {\r\n        setSelectedMeat(allMeat.filter((el) => el.isChecked === true));\r\n    }\r\n\r\n    const addUpMeatCost = () => {\r\n        if (selectedMeat.length !== 0) {\r\n            setSelectedMeatCost(selectedMeat.length - 1);\r\n        }\r\n    }\r\n\r\n\r\n    // Veggies\r\n    const selectedVeggiesHandler = (e) => {\r\n        setAllVeggies(allVeggies.map((item) => {\r\n            if (item.vegName === e.target.value) {\r\n                return {\r\n                    /*With spreading, you can change a property non-destructively: \r\n                    You make a copy of the object where the property has a different value. */\r\n                    ...item, isChecked: !item.isChecked\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    }\r\n\r\n    useEffect(() => {\r\n        createCheckedVegList();\r\n        createCheckedMeatList();\r\n    }, [allVeggies, allMeat]);\r\n\r\n    useEffect(() => {\r\n        addUpVegCost();\r\n        addUpMeatCost();\r\n    }, [selectedVeggies, selectedMeat]);\r\n\r\n    // Add to or remove veggies from list.\r\n    const createCheckedVegList = () => {\r\n        setSelectedVeggies(allVeggies.filter((el) => el.isChecked === true));\r\n    }\r\n\r\n    const addUpVegCost = () => {\r\n        if (selectedVeggies.length !== 0) {\r\n            setSelectedVegCost(selectedVeggies.length - 1);\r\n        }\r\n    }\r\n\r\n    //  useEffect is constantly listening for state changes, and it runs whenever it does change.\r\n    useEffect(() => {\r\n        orderTotalHandler();\r\n    }, [selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost]);\r\n\r\n    const orderTotalHandler = () => {\r\n        let total = selectedSizeCost + selectedCrustCost + \r\n        selectedCheeseCost + selectedMeatCost + selectedVegCost;\r\n        setOrderTotal(total);\r\n    }\r\n\r\n    const getCosts = (e) => {\r\n        setOrderPlaced(true);\r\n        meatReceipt();\r\n        vegReceipt();\r\n    };\r\n\r\n    const meatReceipt = () => {\r\n        let meatConcat = \"\";\r\n        for (let i = 0; i < selectedMeat.length; i++){\r\n            if (i === 0 && selectedMeat.length !== 1){\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (no additional cost), \";\r\n            }\r\n            else if (i === 0 && selectedMeat.length === 1) {\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (no additional cost)\";\r\n            }\r\n            else if (i >= 1 && i < selectedMeat.length - 1) {\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (+$1), \";\r\n            }\r\n            else if (i === selectedMeat.length - 1){\r\n                meatConcat = meatConcat + selectedMeat[i].meatName + \" (+$1)\";\r\n            }\r\n        }\r\n        setMeatStr(meatConcat);\r\n    };\r\n\r\n    const vegReceipt = () => {\r\n        let vegConcat = \"\";\r\n        for (let i = 0; i < selectedVeggies.length; i++){\r\n            if (i === 0 && selectedVeggies.length !== 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (no additional cost), \";\r\n            }\r\n            else if (i === 0 && selectedVeggies.length === 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (no additional cost)\";\r\n            }\r\n            else if (i >= 1 && i < selectedVeggies.length - 1) {\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (+$1), \";\r\n            }\r\n            else if (i === selectedVeggies.length - 1){\r\n                vegConcat = vegConcat + selectedVeggies[i].vegName + \" (+$1)\";\r\n            }\r\n        }\r\n        setVegStr(vegConcat);\r\n    };\r\n\r\n    const clearAll = () => {\r\n        window.location.reload(true);\r\n    }\r\n\r\n    return (\r\n        <Jumbotron\r\n            style={{ backgroundColor: \"rgba(128, 53, 0, 0.781)\", paddingTop: \"10px\", paddingBottom: \"10px\" }}>\r\n            <h2 className=\"text-center\" style={{ color: \"#FEEFB3\", fontFamily: \"monospace\" }}>OR BUILD YOUR OWN PIZZA:</h2>\r\n            <Form>\r\n            <CardGroup>\r\n                {/* Size Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                    <Card.Header>SLICE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a size:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Size options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Personal\"\r\n                            name=\"size\"\r\n                            value=\"Personal\"\r\n                            checked={selectedSize === \"Personal\"}\r\n                            onChange={selectedSizeHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Medium\"\r\n                            name=\"size\"\r\n                            value=\"Medium\"\r\n                            checked={selectedSize === \"Medium\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Large\"\r\n                            name=\"size\"\r\n                            value=\"Large\"\r\n                            checked={selectedSize === \"Large\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Extra Large\"\r\n                            name=\"size\"\r\n                            value=\"Extra Large\"\r\n                            checked={selectedSize === \"Extra Large\"}\r\n                            onChange={selectedSizeHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedSizeCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Crust Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                    <Card.Header>CRUST</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a crust:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Crust options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Plain Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Plain Crust\"\r\n                            checked={selectedCrust === \"Plain Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Garlic Butter Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Garlic Butter Crust\"\r\n                            checked={selectedCrust === \"Garlic Butter Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Cheese Stuffed Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Cheese Stuffed Crust\"\r\n                            checked={selectedCrust === \"Cheese Stuffed Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Spicy Crust\"\r\n                            name=\"crust\"\r\n                            value=\"Spicy Crust\"\r\n                            checked={selectedCrust === \"Spicy Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"House Special Crust\"\r\n                            name=\"crust\"\r\n                            value=\"House Special Crust\"\r\n                            checked={selectedCrust === \"House Special Crust\"}\r\n                            onChange={selectedCrustHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedCrustCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Sauce Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                <Card.Header>SAUCE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a sauce:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Sauce options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Marinara Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"Marinara Sauce\"\r\n                            checked={selectedSauce === \"Marinara Sauce\"}\r\n                            onChange={selectedSauceHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"White Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"White Sauce\"\r\n                            checked={selectedSauce === \"White Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Barbeque Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"Barbeque Sauce\"\r\n                            checked={selectedSauce === \"Barbeque Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"No Sauce\"\r\n                            name=\"sauce\"\r\n                            value=\"No Sauce\"\r\n                            checked={selectedSauce === \"No Sauce\"}\r\n                            onChange={selectedSauceHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>*No additional cost</h4></Card.Footer>\r\n                </Card>\r\n                {/* Cheese Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                <Card.Header>CHEESE</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select a cheese:</Card.Title>\r\n                        <Card.Text>- Choose one</Card.Text>\r\n                        {/* Sauce options radio */}\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Regular\"\r\n                            name=\"cheese\"\r\n                            value=\"Regular\"\r\n                            checked={selectedCheese === \"Regular\"}\r\n                            onChange={selectedCheeseHandler} \r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"No Cheese\"\r\n                            name=\"cheese\"\r\n                            value=\"No Cheese\"\r\n                            checked={selectedCheese === \"No Cheese\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Extra Cheese\"\r\n                            name=\"cheese\"\r\n                            value=\"Extra Cheese\"\r\n                            checked={selectedCheese === \"Extra Cheese\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"radio\"\r\n                            label=\"Vegan Cheeze\"\r\n                            name=\"cheese\"\r\n                            value=\"Vegan Cheeze\"\r\n                            checked={selectedCheese === \"Vegan Cheeze\"}\r\n                            onChange={selectedCheeseHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedCheeseCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Meat Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                    <Card.Header>MEAT</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select meat:</Card.Title>\r\n                        <Card.Text>- You can choose more than one</Card.Text>\r\n                        {/* Veg options checkbox */}\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Pepperoni\"\r\n                            name=\"meat\"\r\n                            value=\"Pepperoni\"\r\n                            checked={allMeat[0].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Sausage\"\r\n                            name=\"meat\"\r\n                            value=\"Sausage\"\r\n                            checked={allMeat[1].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Canadian Bacon\"\r\n                            name=\"meat\"\r\n                            value=\"Canadian Bacon\"\r\n                            checked={allMeat[2].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Chicken\"\r\n                            name=\"meat\"\r\n                            value=\"Chicken\"\r\n                            checked={allMeat[3].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                         <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Buffalo Chicken\"\r\n                            name=\"meat\"\r\n                            value=\"Buffalo Chicken\"\r\n                            checked={allMeat[4].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Vegan Chick'n\"\r\n                            name=\"meat\"\r\n                            value=\"Vegan Chick'n\"\r\n                            checked={allMeat[5].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Vegan Sausage\"\r\n                            name=\"meat\"\r\n                            value=\"Vegan Sausage\"\r\n                            checked={allMeat[6].isChecked}\r\n                            onClick={selectedMeatHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedMeatCost}.00</h4></Card.Footer>\r\n                </Card>\r\n                {/* Veggie Options */}\r\n                <Card\r\n                    text='danger'\r\n                    style={{ backgroundColor: \"#FEEFB3\"}}\r\n                >\r\n                    <Card.Header>VEGGIES</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title>Select veggies:</Card.Title>\r\n                        <Card.Text>- You can choose more than one</Card.Text>\r\n                        {/* Veg options checkbox */}\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Tomatoes\"\r\n                            name=\"veggies\"\r\n                            value=\"Tomatoes\"\r\n                            checked={allVeggies[0].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Onions\"\r\n                            name=\"veggies\"\r\n                            value=\"Onions\"\r\n                            checked={allVeggies[1].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Olives\"\r\n                            name=\"veggies\"\r\n                            value=\"Olives\"\r\n                            checked={allVeggies[2].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Green Peppers\"\r\n                            name=\"veggies\"\r\n                            value=\"Green Peppers\"\r\n                            checked={allVeggies[3].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Mushrooms\"\r\n                            name=\"veggies\"\r\n                            value=\"Mushrooms\"\r\n                            checked={allVeggies[4].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Pineapple\"\r\n                            name=\"veggies\"\r\n                            value=\"Pineapple\"\r\n                            checked={allVeggies[5].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Spinach\"\r\n                            name=\"veggies\"\r\n                            value=\"Spinach\"\r\n                            checked={allVeggies[6].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                        <Form.Check\r\n                            type=\"checkbox\"\r\n                            label=\"Jalapeno\"\r\n                            name=\"veggies\"\r\n                            value=\"Jalapeno\"\r\n                            checked={allVeggies[7].isChecked}\r\n                            onClick={selectedVeggiesHandler}\r\n                        />\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-danger\"><h4>${selectedVegCost}.00</h4></Card.Footer>\r\n                </Card>\r\n            </CardGroup>\r\n            <Card.Footer style={{ color: \"#FEEFB3\"}}><h4>Total: ${orderTotal}.00</h4></Card.Footer>\r\n            <Row>\r\n                <Col>\r\n                    <Button\r\n                        variant=\"warning\"\r\n                        size=\"lg\"\r\n                        block\r\n                        onClick={getCosts}\r\n                    >Place Order!</Button>\r\n                </Col>\r\n                <Col>\r\n                    <Button\r\n                        variant=\"danger\"\r\n                        size=\"lg\"\r\n                        block\r\n                        onClick={clearAll}\r\n                    >Cancel</Button>\r\n                </Col>\r\n            </Row>\r\n            </Form>\r\n        </Jumbotron>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default PizzaForm;","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Nav.js",[],"C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Jumbotron.js",["49"],"import React from \"react\";\r\nimport { Jumbotron, Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Jumbo = () => {\r\n\r\n    return(\r\n        <Jumbotron className=\"text-center\"\r\n        style={{ backgroundColor: \"rgba(128, 53, 0, 0.781)\", marginTop: \"20px\" }}>\r\n            <Row>\r\n                <Col></Col>\r\n                <Col xs={6}>\r\n                <h1 style={{ color: \"#FEEFB3\", fontFamily: \"monospace\", fontSize: \"50px\" }}>FOR THE <span style={{ color: \"#F32013\" }}>LOVE</span> OF PIZZA...</h1>\r\n                <h3 style={{ color: \"#FEEFB3\", float: \"right\", fontFamily: \"monospace\" }}>YOU HAVE TO TASTE IT!</h3>\r\n                </Col>\r\n                <Col>\r\n                    {/* <img src={VeganPizza} \r\n                    style={{ width: \"350px\", height: \"250px\" }}\r\n                    /> */}\r\n                </Col>\r\n            </Row>\r\n        </Jumbotron>\r\n    );\r\n}\r\n\r\nexport default Jumbo;","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\Prices.js",["50"],"import React from \"react\";\r\nimport { Jumbotron, Table, Container, Row, Col, Button } from \"react-bootstrap\";\r\nimport VeganPizza from \"./img/Vegan-Pizza2.jpg\";\r\n\r\nconst Prices = () => {\r\n\r\n    return(\r\n        <Jumbotron\r\n        style={{ color: \"#FEEFB3\", paddingBottom: \"10px\", paddingTop: \"10px\", backgroundColor: \"rgba(128, 53, 0, 0.781)\" }}\r\n        >\r\n            <h2 className=\"text-center\" style={{ fontFamily: \"monospace\" }}>CHOOSE FROM OUR MOST POPULAR PIZZAS:</h2>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <Table striped\r\n                        style={{ color: \"#FEEFB3\", backgroundColor: \"rgba(243, 32, 19, 0.781)\" }}\r\n                        >\r\n                            <thead>\r\n                                <tr>\r\n                                <th></th>\r\n                                <th>PIZZA</th>\r\n                                <th>PRICE</th>\r\n                                <th>ORDER NOW</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                <td>1</td>\r\n                                <td>LARGE CHEESE STUFFED CRUST PIZZA</td>\r\n                                <td>$17.00</td>\r\n                                <td><Button variant=\"warning\">Place Order!</Button></td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>2</td>\r\n                                <td>LARGE BUFFALO CHICKEN PIZZA</td>\r\n                                <td>$14.00</td>\r\n                                <td><Button variant=\"warning\">Place Order!</Button></td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>3</td>\r\n                                <td>EXTRA LARGE MEAT LOVERS PIZZA</td>\r\n                                <td>$19.00</td>\r\n                                <td><Button variant=\"warning\">Place Order!</Button></td>\r\n                                </tr>\r\n                                <tr>\r\n                                <td>4</td>\r\n                                <td>MEDIUM VEGGIES LOVER PIZZA</td>\r\n                                <td>$14.00</td>\r\n                                <td><Button variant=\"warning\">Place Order!</Button></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    {/* <img src={VeganPizza} \r\n                        style={{ width: \"350px\", height: \"250px\" }}\r\n                    /> */}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default Prices;","C:\\Repos\\React-projects\\Pizza App\\pizza-app\\src\\components\\ThankYou.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":8,"nodeType":"57","messageId":"58","endLine":5,"endColumn":18},{"ruleId":"59","severity":1,"message":"60","line":64,"column":8,"nodeType":"61","endLine":64,"endColumn":21,"suggestions":"62"},{"ruleId":"63","severity":1,"message":"64","line":97,"column":7,"nodeType":"65","endLine":109,"endColumn":11},{"ruleId":"55","severity":1,"message":"66","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":16},{"ruleId":"55","severity":1,"message":"67","line":3,"column":26,"nodeType":"57","messageId":"58","endLine":3,"endColumn":35},{"ruleId":"55","severity":1,"message":"68","line":56,"column":15,"nodeType":"57","messageId":"58","endLine":56,"endColumn":25},{"ruleId":"59","severity":1,"message":"69","line":118,"column":8,"nodeType":"61","endLine":118,"endColumn":29,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":123,"column":8,"nodeType":"61","endLine":123,"endColumn":39,"suggestions":"72"},{"ruleId":"59","severity":1,"message":"73","line":139,"column":8,"nodeType":"61","endLine":139,"endColumn":100,"suggestions":"74"},{"ruleId":"55","severity":1,"message":"67","line":2,"column":21,"nodeType":"57","messageId":"58","endLine":2,"endColumn":30},{"ruleId":"55","severity":1,"message":"75","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'PizzaVideo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'receipt'. Either include it or remove the dependency array.","ArrayExpression",["78"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'render' is defined but never used.","'Container' is defined but never used.","'sauceCosts' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createCheckedMeatList' and 'createCheckedVegList'. Either include them or remove the dependency array.",["79"],"React Hook useEffect has missing dependencies: 'addUpMeatCost' and 'addUpVegCost'. Either include them or remove the dependency array.",["80"],"React Hook useEffect has a missing dependency: 'orderTotalHandler'. Either include it or remove the dependency array.",["81"],"'VeganPizza' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [orderPlaced, receipt]",{"range":"90","text":"91"},"Update the dependencies array to be: [allVeggies, allMeat, createCheckedVegList, createCheckedMeatList]",{"range":"92","text":"93"},"Update the dependencies array to be: [selectedVeggies, selectedMeat, addUpVegCost, addUpMeatCost]",{"range":"94","text":"95"},"Update the dependencies array to be: [selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost, orderTotalHandler]",{"range":"96","text":"97"},[2453,2466],"[orderPlaced, receipt]",[3771,3792],"[allVeggies, allMeat, createCheckedVegList, createCheckedMeatList]",[3879,3910],"[selectedVeggies, selectedMeat, addUpVegCost, addUpMeatCost]",[4409,4501],"[selectedSizeCost, selectedCrustCost, selectedCheeseCost, selectedMeatCost, selectedVegCost, orderTotalHandler]"]